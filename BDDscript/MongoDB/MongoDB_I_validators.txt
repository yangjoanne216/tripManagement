//I.validator
//I.1 city
db.createCollection("city", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      description: "A city with denormalized POIs and accommodations",
      required: ["_id", "name", "photos", "geoInfo", "accommodations", "pointsOfInterest"],
      properties: {
        _id: {
          bsonType: "objectId",
          description: "Unique identifier for the city"
        },
        name: {
          bsonType: "string",
          description: "Name of the city"
        },
        photos: {
          bsonType: "array",
          description: "Array of URLs of city photos",
          items: {
            bsonType: "string",
            pattern: "^https?://",
            description: "A valid HTTP or HTTPS URL"
          }
        },
        geoInfo: {
          bsonType: "object",
          description: "Geographical coordinates",
          required: ["lat", "lon"],
          properties: {
            lat: {
              bsonType: ["double", "decimal"],
              minimum: -90,
              maximum: 90,
              description: "Latitude in degrees"
            },
            lon: {
              bsonType: ["double", "decimal"],
              minimum: -180,
              maximum: 180,
              description: "Longitude in degrees"
            }
          }
        },
        accommodations: {
          bsonType: "array",
          description: "Denormalized list of accommodation summaries",
          items: {
            bsonType: "object",
            required: ["id", "name", "price", "available"],
            properties: {
              id: {
                bsonType: "objectId",
                description: "Reference to an accommodation document"
              },
              name: {
                bsonType: "string",
                description: "Accommodation name"
              },
              price: {
                bsonType: ["int", "double", "decimal"],
                minimum: 0,
                description: "Nightly price in USD (or smallest currency unit)"
              },
              available: {
                bsonType: "bool",
                description: "Availability flag"
              }
            }
          }
        },
        pointsOfInterest: {
          bsonType: "array",
          description: "Denormalized list of POI summaries",
          items: {
            bsonType: "object",
            required: ["id", "name"],
            properties: {
              id: {
                bsonType: "objectId",
                description: "Reference to a pointOfInterest document"
              },
              name: {
                bsonType: "string",
                description: "POI name"
              }
            }
          }
        }
      }
    }
  }
});


//I.2 pointOfInterest
db.createCollection("pointOfInterest", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      description: "Detailed information about a point of interest",
      required: ["_id", "name", "photos", "address", "geoInfo", "city"],
      properties: {
        _id: {
          bsonType: "objectId",
          description: "Unique identifier for the POI"
        },
        name: {
          bsonType: "string",
          description: "Name of the point of interest"
        },
        photos: {
          bsonType: "array",
          description: "Array of URLs for POI photos",
          items: {
            bsonType: "string",
            pattern: "^https?://",
            description: "A valid HTTP or HTTPS URL"
          }
        },
        address: {
          bsonType: "string",
          description: "Full address, including city and country"
        },
        geoInfo: {
          bsonType: "object",
          description: "Coordinates for geospatial queries",
          required: ["lat", "lon"],
          properties: {
            lat: {
              bsonType: ["double", "decimal"],
              minimum: -90,
              maximum: 90,
              description: "Latitude in degrees"
            },
            lon: {
              bsonType: ["double", "decimal"],
              minimum: -180,
              maximum: 180,
              description: "Longitude in degrees"
            }
          }
        },
        city: {
          bsonType: "object",
          description: "Reference to parent city",
          required: ["id", "name"],
          properties: {
            id: {
              bsonType: "objectId",
              description: "ID of the city document"
            },
            name: {
              bsonType: "string",
              description: "Name of the city"
            }
          }
        }
      }
    }
  }
});

//I.3 activity
db.createCollection("activity", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      description: "An activity offered at a point of interest",
      required: ["_id", "name", "pointOfInterest", "photos", "seasons", "price"],
      properties: {
        _id: {
          bsonType: "objectId",
          description: "Unique identifier for the activity"
        },
        name: {
          bsonType: "string",
          description: "Name of the activity"
        },
        pointOfInterest: {
          bsonType: "object",
          description: "Reference to the hosting POI",
          required: ["id", "name"],
          properties: {
            id: {
              bsonType: "objectId",
              description: "ID of the pointOfInterest document"
            },
            name: {
              bsonType: "string",
              description: "Name of the point of interest"
            }
          }
        },
        photos: {
          bsonType: "array",
          description: "URLs of activity photos",
          items: {
            bsonType: "string",
            pattern: "^https?://",
            description: "A valid HTTP or HTTPS URL"
          }
        },
        seasons: {
          bsonType: "array",
          description: "Seasons when the activity runs",
          items: {
            bsonType: "string",
             enum: [
            "January", "February", "March", "April",
            "May", "June", "July", "August",
            "September", "October", "November", "December"
            ],
            description: "One of the 12 month namesï¼Œeg. January,February"
          }
        },
        price: {
          bsonType: "object",
          description: "Pricing structure by age group",
          required: ["adult", "child"],
          properties: {
            adult: {
              bsonType: ["int", "double", "decimal"],
              minimum: 0,
              description: "Price for adults"
            },
            child: {
              bsonType: ["int", "double", "decimal"],
              minimum: 0,
              description: "Price for children"
            }
          }
        }
      }
    }
  }
});

//I.4 accommodation
db.createCollection("accommodation", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      description: "Detailed information about an accommodation",
      required: ["_id", "name", "address", "photos", "city", "price", "available"],
      properties: {
        _id: {
          bsonType: "objectId",
          description: "Unique identifier for the accommodation"
        },
        name: {
          bsonType: "string",
          description: "Name of the hotel or lodging"
        },
        address: {
          bsonType: "string",
          description: "Full address, including street, city, province/state"
        },
        photos: {
          bsonType: "array",
          description: "Array of URLs for accommodation photos",
          items: {
            bsonType: "string",
            pattern: "^https?://",
            description: "A valid HTTP or HTTPS URL"
          }
        },
        city: {
          bsonType: "object",
          description: "Reference to the parent city",
          required: ["id", "name"],
          properties: {
            id: {
              bsonType: "objectId",
              description: "ID of the city document"
            },
            name: {
              bsonType: "string",
              description: "Name of the city"
            }
          }
        },
        price: {
          bsonType: ["int", "double", "decimal"],
          minimum: 0,
          description: "Nightly rate in USD (or smallest currency unit)"
        },
        available: {
          bsonType: "bool",
          description: "Whether the accommodation is currently available for booking"
        }
      }
    }
  }
});

